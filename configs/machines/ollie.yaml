# THE ollie.awi.de YAML config file

name: ollie

accounting: false
batch_system: "slurm"

operating_system: "linux-centos"

jobtype: compute
sh_interpreter: "/usr/bin/bash"


choose_jobtype:
        post:
                partition: smp
        compute:
                partition: mpp
        tidy_and_resubmit:
                partition: mpp

choose_partition:
        "mpp":
                cores_per_node: 36
        "smp":
                cores_per_node: 1

logical_cpus_per_core: 2

threads_per_core: 1

pool_dir: "/work/ollie/pool"

pool_directories:
        pool: "/work/ollie/pool"
        projects: "/work/ollie/projects"
        focipool: "/dev/null"

# ?????
choose_submitted:
        true:
                modules_needed:
                        - centoslibs
        false:
                nothing: much

submitted: false
hyper_flag: "" # No hyperthreading on ollie

# standard environment setup
#
#


#Hey Paul,
#please put that into pism.yaml:
#- "load pism_externals"
#- "I_MPI_FABRICS=shm:tmi"

choose_general.setup_name:
        mpiesm:
                add_export_vars:
                   # MPIOM vars
                   - 'ARFLAGS=crv'
                   - 'OASIS3MCT_FC_LIB="-L$NETCDFFROOT/lib -lnetcdff"'
                   - 'OASIS3MCTROOT=${model_dir}'
                   - 'CFLAGS="-O2 -DgFortran -std=gnu99 -xHost"'
                   - 'FCFLAGS="-O3 -fpe0 -i4 -fp-model source -fast-transcendentals -no-prec-sqrt -xHost -heap-arrays -convert big_endian -fpp"'
                   - 'FFLAGS="$FCFLAGS"'
                   - 'WLFLAG="-Wl"'
                   - 'LIBS="-Wl,-rpath,$NETCDF_DIR/lib:$NETCDF_DIR/lib:$HDF5ROOT/lib:""/lib:${I_MPI_ROOT}/intel64/lib"'


useMPI: intelmpi

module_actions:
        - "purge"
        - "load cmake"
        - "load udunits"
        - "load gribapi/1.28.0"
        - "unload intel.compiler"
        - "load intel.compiler"
        - "unload netcdf"
        - "load hdf5"
        - "load centoslibs cdo nco netcdf/4.6.2_intel"
        # NOTE(PG): Using this model breaks ECHAM6-Concurrent Rad compilation
        # - "load python3/3.7.7_intel2020"
        - "load automake"
        - "list"

export_vars:

        - 'HDF5ROOT=$HDF5_ROOT'

        - 'NETCDFFROOT=$NETCDF_DIR'
        - 'NETCDFROOT=$NETCDF_DIR'
        - 'NETCDF_Fortran_INCLUDE_DIRECTORIES=$NETCDFROOT/include'
        - 'NETCDF_CXX_INCLUDE_DIRECTORIES=NETCDFROOT/include'
        - 'NETCDF_CXX_LIBRARIES=$NETCDFROOT/lib'

        - 'PERL5LIB=/usr/lib64/perl5'
        - 'LAPACK_LIB="-lmkl_intel_lp64 -lmkl_core -mkl=sequential -lpthread -lm -ldl"'
        - 'LAPACK_LIB_DEFAULT="-L/global/AWIsoft/intel/2018/compilers_and_libraries_2018.5.274/linux/mkl/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        - 'XML2ROOT=/usr'
        - 'ZLIBROOT=/usr'

        - 'FC=${fc}'
        - 'F77=${f77}'
        - 'MPIFC=${mpifc}'
        - 'MPICC=${mpicc}'
        - 'CC=${cc}'
        - 'CXX=${cxx}'

        - "MPIROOT=$(${mpifc} -show | perl -lne 'm{ -I(.*?)/include } and print $1')"
        - "MPI_LIB=$(${mpifc} -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')"

        - 'PATH=/work/ollie/jhegewal/sw/cmake/bin:$PATH'

choose_useMPI:
        intelmpi:
                add_module_actions:
                        - "unload intel.mpi"
                        - "load intel.mpi"
                fc: '"mpiifort -mkl"'
                f77: '"mpiifort -mkl"'
                mpifc: mpiifort
                mpicc: mpiicc
                cc: mpiicc
                cxx: mpiicpc

                add_export_vars:
                        - 'MPIROOT=${I_MPI_ROOT}/intel64'

further_reading:
        - batch_system/slurm.yaml
