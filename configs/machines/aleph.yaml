# THE aleph.iccp.kr YAML config file

name: aleph

accounting: true
batch_system: "pbs"

operating_system: "SLES"

jobtype: compute
sh_interpreter: "/usr/bin/sh"


choose_jobtype:
        post:
                partition: serial
        compute:
                partition: iccp
        tidy_and_resubmit:
                partition: iccp

choose_partition:
        "iccp":
                cores_per_node: 40
        "serial":
                cores_per_node: 1

logical_cpus_per_core: 2

threads_per_core: 1
pool_dir: "/proj/awi"

pool_directories:
        pool: "/proj/awi"
        projects: "/proj/awi"


submitted: false
hyper_flag: ""

# standard environment setup
#
#

useMPI: craympi

module_actions:
        - "purge"
        - "PrgEnv-cray/6.0.4"
        - "load cmake"
        - "load cray-netcdf-hdf5paralle"
        - "load cdo nco"
        - "load python/3.9.1"
        - "list"
# some yamls use computer.fc, etc to identify the compiler, so we need to add them

FC: ftn
F77: ftn
MPIFC: ftn
MPICC: cc
CC: cc
CXX: cc

export_vars:
        LC_ALL: en_US.UTF-8

        HDF5ROOT: $HDF5_ROOT

        NETCDFFROOT: $NETCDF_DIR
        NETCDFROOT: $NETCDF_DIR
        NETCDF_Fortran_INCLUDE_DIRECTORIES: $NETCDFROOT/include
        NETCDF_CXX_INCLUDE_DIRECTORIES: $NETCDFROOT/include
        NETCDF_CXX_LIBRARIES: $NETCDFROOT/lib

        PERL5LIB: /usr/lib64/perl5
        #LAPACK_LIB: '"-lmkl_intel_lp64 -lmkl_core -mkl=sequential -lpthread -lm -ldl"'
        #LAPACK_LIB_DEFAULT: '"-L/global/AWIsoft/intel/2018/compilers_and_libraries_2018.5.274/linux/mkl/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"'
        XML2ROOT: /usr
        ZLIBROOT: /usr

        MPIROOT: "$(${mpifc} -show | perl -lne 'm{ -I(.*?)/include } and print $1')"
        MPI_LIB: "$(${mpifc} -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')"

choose_useMPI:
        intelmpi: #Only work on if we get stuck badly with CRAY
                add_module_actions:
                        - "unload intel.mpi"
                        - "load intel.mpi"
                fc: '"mpiifort -mkl"'
                f77: '"mpiifort -mkl"'
                mpifc: mpiifort
                mpicc: mpiicc
                cc: mpiicc
                cxx: mpiicpc

                add_export_vars:
                        MPIROOT: ${I_MPI_ROOT}/intel64
        craympi:
                FC: ftn
                F77: ftn
                MPIFC: ftn
                MPICC: cc
                CC: cc
                CXX: cc

further_reading:
        - batch_system/slurm.yaml
        #- batch_system/pbs.yaml TODO
